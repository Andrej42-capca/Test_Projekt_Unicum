# Model (Модель) - отвечает за данные и логику работы с ними
class Calculator:
    def __init__(self):
        self.value = 0

    def set_value(self, value):
        self.value = value

    def add(self, number):
        self.value += number
        return self.value

    def subtract(self, number):
        self.value -= number
        return self.value

    def multiply(self, number):
        self.value *= number
        return self.value

    def divide(self, number):
        if number != 0:
            self.value /= number
            return self.value
        else:
            raise ValueError("Деление на ноль невозможно")


# View (Представление) - отвечает за отображение и ввод данных
def display_menu():
    print("\nВыбери действие: 1 - сложить, 2 - вычесть, 3 - умножить, 4 - разделить, 0 - выход")
    choice = input("Введи номер действия: ")
    return choice

def show_result(result):
    print(f"Результат: {result}")

def get_number():
    return float(input("Введи число: "))

def show_message(message):
    print(message)


# Controller (Контроллер) - управляет логикой и связывает модель с представлением
def main():
    calculator = Calculator()

    while True:
        choice = display_menu()

        if choice == "1":
            number = get_number()
            result = calculator.add(number)
            show_result(result)
        elif choice == "2":
            number = get_number()
            result = calculator.subtract(number)
            show_result(result)
        elif choice == "3":
            number = get_number()
            result = calculator.multiply(number)
            show_result(result)
        elif choice == "4":
            number = get_number()
            try:
                result = calculator.divide(number)
                show_result(result)
            except ValueError as e:
                show_message(str(e))
        elif choice == "0":
            show_message("Пока!")
            break
        else:
            show_message("Неверный выбор, попробуй снова")


# Запуск программы
if name == "__main__":
    main()
